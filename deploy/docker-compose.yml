volumes:
  postgresql-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./postgresql/data
  policy-enforcement-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./policy-enforcement-service
services:
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - 5672:5672
      - 15672:15672
  postgresql:
    image: postgres:15
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgresql7
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/db-files/
    ports:
      - 5432:5432
  policy-enforcement-service:
    container_name: policy-enforcement-service
    build:
      context: ../services/policy-enforcement-service
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - policy-enforcement-data:/mnt/
    environment:
      JWT_SECRET:
      POLICIES_CONFIG_PATH:
    env_file:
      - .env
  tasks_service:
    container_name: tasks-service
    build:
      context: ../services/tasks-service
      dockerfile: ./Dockerfile
    ports:
      - "5001:5000"
    environment:
      POSTGRES_DSN:
    depends_on:
      - postgresql
    env_file:
      - .env
  comment_service:
    container_name: comment-service
    build:
      context: ../services/comment-service
      dockerfile: ./Dockerfile
    ports:
      - "5002:5000"
    environment:
      POSTGRES_DSN:
    env_file:
      - .env
    depends_on:
      - postgresql
  user_service:
    container_name: user-service
    build:
      context: ../services/user-service
      dockerfile: ./Dockerfile
    ports:
      - "5003:5000"
    environment:
      POSTGRES_DSN: ${POSTGRES_DSN_ASYNC}
      JWT_SECRET:
      RESET_PASSWORD_TOKEN_SECRET:
      VERIFICATION_TOKEN_SECRET:
    env_file:
      - .env
    depends_on:
      - postgresql
